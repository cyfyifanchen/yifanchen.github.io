<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<generator uri="http://jekyllrb.com" version="3.0.3">Jekyll</generator>
<link href="http://localhost:3000/feed.xml" rel="self" type="application/atom+xml" />
<link href="http://localhost:3000/" rel="alternate" type="text/html" />
<updated>2016-04-12T23:04:43-06:00</updated>
<id>http://localhost:3000/</id>
<title>Yifan Chen</title>
<entry>
<title>What to Expect For Next Generation of MacBook Pro</title>
<link href="http://localhost:3000/the-new-macbook-pro/" rel="alternate" type="text/html" title="What to Expect For Next Generation of MacBook Pro" />
<published>2016-04-12T00:00:00-06:00</published>
<updated>2016-04-12T00:00:00-06:00</updated>
<id>http://localhost:3000/the-new-macbook-pro</id>
<content type="html" xml:base="http://localhost:3000/the-new-macbook-pro/">&lt;h2 id=&quot;what-to-expect-for-next-gen-of-macbook-pro&quot;&gt;What to expect for next gen of Macbook Pro&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Our version for personal computing has always been that the most powerful technology should deliver incredible capability without the complexity.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I bought my very first Macbook Pro back in 2012 summer right after Apple announced it at WWDC. I was literally thinking “Shup up, and take my money” while I was watching the &lt;a href=&quot;https://www.youtube.com/watch?v=6kYxnMUOczg&quot; target=&quot;_blank&quot;&gt;trailer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The current generation of Macbook Pro has always been rated one of the best laptops to buy through the years. Despite the slightly high price, it is extremely popular among developers. It’s discripted as one the best laptop to won for developers.(Mostly Unix-based OS), .net developers,  I of the best laptops to buy since the day it was announced. that year, and of course, developers love this machine.Ever since after that, I got even more excited to see what the next generation of Retina
Macbook Pro is going to be like.&lt;/p&gt;

&lt;h4 id=&quot;half-of-the-cost-with-a-better-proformence-pc&quot;&gt;Half of the cost with a better proformence PC?&lt;/h4&gt;

&lt;p&gt;Buying a Mac or a PC has always been a controversy, people debate about it with different needs and reasons. There simply is no right or wrong Lots of people don’t seem to understand that comparing a Mac to a PC is useless, and waste of time on many different levels. Mac doesn’t only come with a pretty piece of hardware&lt;/p&gt;

&lt;h4 id=&quot;some-expectations-for-upcoming-os-x-this-fall&quot;&gt;Some expectations for upcoming OS X this Fall&lt;/h4&gt;

&lt;p&gt;Metal&lt;/p&gt;

&lt;p&gt;Through all these years, Mac gaming isn’t too far from a concept. Major game makers don’t give. It’s what we believe personal computing is going.&lt;/p&gt;

</content>
<category term="apple" />
<category term="macbook pro" />
<category term="technology" />
<summary>What to expect for next gen of Macbook Pro</summary>
</entry>
<entry>
<title>Getting linters working in Atom and Vim</title>
<link href="http://localhost:3000/getting-linters-working-in-atom-and-vim/" rel="alternate" type="text/html" title="Getting linters working in Atom and Vim" />
<published>2016-04-08T00:00:00-06:00</published>
<updated>2016-04-08T00:00:00-06:00</updated>
<id>http://localhost:3000/getting-linters-working-in-atom-and-vim</id>
<content type="html" xml:base="http://localhost:3000/getting-linters-working-in-atom-and-vim/">&lt;h2 id=&quot;getting-linters-working-in-atom-and-vim&quot;&gt;Getting linters working in Atom and Vim&lt;/h2&gt;

&lt;p&gt;I like &lt;a href=&quot;{{ site.url }}/The-Value-of-Code-Consistency-is-Underesimated/&quot; target=&quot;_blank&quot;&gt;code consistency&lt;/a&gt;, and think the value of it matters a lot to a team in a long run. It’s not easy to achieve code consistency in the middle of an ongoing project. What’s even harder is that finding a doable approach of getting same code style of everyone in the team. To complete this for the team, there will be fine training and strict rules needed. However, lack of proper training and code style management are obviously everywhere today. There is a fine line between killing the creativity of developers and boosting the productivity of teams. Software development is not about one single kick ass developer, it’s about teamwork and team effort. I decided to give a try.&lt;/p&gt;

&lt;p&gt;If I happen to have an idea that hopefully my team will adopt, I have to make sure first the value of the idea is beneficial to the team in every aspect. Second prototype happens before implementation. Then the rest of the team only needs to spend a minimal effort to carry on. To do so, I need to find out how to do the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Finding the correct litners&lt;/li&gt;
  &lt;li&gt;Making sure the linters work in both Atom and Vim, possibly all common text editors.&lt;/li&gt;
  &lt;li&gt;Convince the team&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;part-1---finding-the-correct-linters&quot;&gt;Part 1 - Finding the correct linters&lt;/h4&gt;

&lt;p&gt;Of course, the easiest part comes in first. Finding suitable litners isn’t hard. &lt;a href=&quot;http://fortune.com/2015/12/09/airbnb-glassdoor/&quot; target=&quot;_blank&quot;&gt;Airbnb&lt;/a&gt; is rated the best tech company to work for in 2016. I happen to know Airbnb because of their linters, not the service I used. Airbnb has several linters, the most famous and beloved linter is their &lt;a href=&quot;https://github.com/airbnb/javascript&quot; target=&quot;_blank&quot;&gt;JSCS linter&lt;/a&gt;.
It is open-sourced, and very popular among developers. I dug in a little and read through the documentations, made sure it was what I was looking for and simple enough for my team to use.&lt;/p&gt;

&lt;h4 id=&quot;part-2---making-sure-the-linters-work-in-common-editors&quot;&gt;Part 2 - Making sure the linters work in common editors&lt;/h4&gt;

&lt;p&gt;I browsed &lt;a href=&quot;http://jscs.info/&quot; target=&quot;_blank&quot;&gt;JSCS&lt;/a&gt; for the info I needed. Bam, I found everything &lt;a href=&quot;http://jscs.info/overview&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;. I opened Atom and installed the
&lt;a href=&quot;https://atom.io/packages/linter-jscs&quot; target=&quot;_blank&quot;&gt;JSCS Linter&lt;/a&gt; inside Atom, changed the preset to Airbnb. Tested it with couple &lt;code class=&quot;highlighter-rouge&quot;&gt;js&lt;/code&gt; files, it worked beautifully. Then let’s get it working in Vim. Although I am a Vimmer, but I know it will take much longer to make it working in Vim than in Atom. First, I needed to &lt;code class=&quot;highlighter-rouge&quot;&gt;npm insteall jscs -g&lt;/code&gt; to my &lt;code class=&quot;highlighter-rouge&quot;&gt;home&lt;/code&gt; directory. Then I created &lt;code class=&quot;highlighter-rouge&quot;&gt;.jscsrc&lt;/code&gt; file and put the preset like the following code in my &lt;code class=&quot;highlighter-rouge&quot;&gt;home&lt;/code&gt; directory.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;preset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;airbnb&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then, the rest is to config Syntastic to call the correct litner.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_javascript_checkers = [&#39;jscs&#39;]
let g:syntastic_html_tidy_exec = &#39;tidy5&#39;
let jshint2_read = 1
let jshint2_save = 1
let g:syntastic_check_on_open = 1

&quot;dispaly all errors for mutiple checkers
let g:syntastic_aggregate_errors = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Good, everything worked. Although Syntastic with new linter slows down Vim loading speed a bit, I am still pretty happy with the result of it. The next step is getting CSS and React linters working, and put them in our build system, which I will write later.&lt;/p&gt;

&lt;h4 id=&quot;part-3---convince-the-team&quot;&gt;Part 3 - Convince the team&lt;/h4&gt;

&lt;p&gt;Luckily, everyone in my team is a team player. It doesn’t take much to explain the value of it. It’s especially easier since I have figured out everything first, all they need to do is execution.&lt;/p&gt;

&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;

&lt;p&gt;This is a post showing how I took an idea and applied it to my team. In reality, it might be harder to adopt an impractical idea or your team is too big to change. However, a little by little everyone can improve their teams, everyone can be a true team player.&lt;/p&gt;

</content>
<category term="vim" />
<category term="atom" />
<category term="linters" />
<summary>Getting linters working in Atom and Vim</summary>
</entry>
<entry>
<title>Using AMP to Build a Blog</title>
<link href="http://localhost:3000/Using-AMP-Building-Blog/" rel="alternate" type="text/html" title="Using AMP to Build a Blog" />
<published>2016-04-05T00:00:00-06:00</published>
<updated>2016-04-05T00:00:00-06:00</updated>
<id>http://localhost:3000/Using-AMP-Building-Blog</id>
<content type="html" xml:base="http://localhost:3000/Using-AMP-Building-Blog/">&lt;h2 id=&quot;using-amp-to-build-a-blog&quot;&gt;Using AMP to build a blog&lt;/h2&gt;

&lt;p&gt;AMP is Accelerated Mobile Pages, &lt;em&gt;a open source initiative that embodies the vision that publishers can create mobile optimized content once and have it load instantly everywhere.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I read this today, thinking about taking my blog from Jekyll to AMP. Doing this is not because the improved milliseconds loading speed on my site. It’s all about the spirit of craftsman. Software engineering is like craftsmanship, there isn’t the best way, but always the better way. The intention with perfection makes software better and better.&lt;/p&gt;

</content>
<category term="thoughts" />
<category term="team" />
<category term="design" />
<summary>Using AMP to build a blog</summary>
</entry>
<entry>
<title>The Value of Code Consistency is Underestimated</title>
<link href="http://localhost:3000/The-Value-of-Code-Consistency-is-Underesimated/" rel="alternate" type="text/html" title="The Value of Code Consistency is Underestimated" />
<published>2016-04-03T00:00:00-06:00</published>
<updated>2016-04-03T00:00:00-06:00</updated>
<id>http://localhost:3000/The-Value-of-Code-Consistency-is-Underesimated</id>
<content type="html" xml:base="http://localhost:3000/The-Value-of-Code-Consistency-is-Underesimated/">&lt;h3 id=&quot;the-value-of-code-consistency-is-underestimated&quot;&gt;The value of code consistency is underestimated&lt;/h3&gt;

&lt;p&gt;I worked on a friend’s design not too long ago. His design drove me crazy because the lack of consistency. The margins, paddings, font sizes, and colors were all different in different pages. I ended up eyeballed everything because I wasn’t sure which page to follow. Keep things consistent seems easy and doable to designers. In reality, only very experienced designers come along with consistent designs. A good design isn’t something how it looks, it’s how it works on many different levels.&lt;/p&gt;

&lt;p&gt;A good design starts with a thoughtful process, a careful planning and an intention to details. At last, it’s how it looks. That is why a good design takes time, and it should take time. In the world we are in now, it’s nearly impossible to have designers to think thoroughly before they start working on it.&lt;/p&gt;

&lt;p&gt;As same in design, code consistency is hard to keep as well especially when developers come and go. Writing maintainable code with code consistency really matters to the team in a long run. The value of code consistency is way underestimated today. QA developers spend a lot of time to verify bugs on the outside, code consistency is certainly a way can reduce amounts of possible bugs on the inside. It is also far more efficient and effective than code refactor, which can be considered as one of the passive ways to match code consistency. Developers come from various backgrounds, having different developers following one rule is nearly impossible by telling them what to do or ask them to read the damn documentations. It may end up making they think you micro-manage them, bringing negative atmosphere to the team.&lt;/p&gt;

&lt;p&gt;So, what’s the correct and the best way of building a team with a healthy and creative vibe that also is very friendly to developers? First of all, proper training. Yes, we are talking about serious and thorough training that are tailored to developers, not a short time, not a few links to long and boring documentation. In fact, decent sized companies should have dedicated developers work on the training programs. Second, linters and build systems. Yes, I know developers don’t like linters, but think broader, in a long run, team benefits from it. Third, proper education of team cultures. It will never work by just asking developers to do things. Explain pros and cons to them. They will understand when it comes down to the team effort because today everyone claims they are team players.&lt;/p&gt;
</content>
<category term="thoughts" />
<category term="team" />
<category term="design" />
<summary>The value of code consistency is underestimated</summary>
</entry>
<entry>
<title>他们总是更新我做过的东西</title>
<link href="http://localhost:3000/why-no-projects/" rel="alternate" type="text/html" title="他们总是更新我做过的东西" />
<published>2016-03-31T12:39:00-06:00</published>
<updated>2016-03-31T12:39:00-06:00</updated>
<id>http://localhost:3000/why-no-projects</id>
<content type="html" xml:base="http://localhost:3000/why-no-projects/">&lt;p&gt;叹气，好坏几年程序员了，至少给我个机会拿点东西出来潇洒一下。那帮混蛋总是更新我做过的东西。又不好意思拿别人改过的东西出来风骚。看来这下得自己花时间搞点小东西出来炫耀炫耀，至少能满足一下这爱耍宝的自尊心了。&lt;/p&gt;
</content>
<category term="Projects" />
<category term="Why-No-Projects" />
<summary>叹气，好坏几年程序员了，至少给我个机会拿点东西出来潇洒一下。那帮混蛋总是更新我做过的东西。又不好意思拿别人改过的东西出来风骚。看来这下得自己花时间搞点小东西出来炫耀炫耀，至少能满足一下这爱耍宝的自尊心了。</summary>
</entry>
<entry>
<title>Swap screenshot shortcuts</title>
<link href="http://localhost:3000/swap-screenshot-shortcut/" rel="alternate" type="text/html" title="Swap screenshot shortcuts" />
<published>2016-03-30T00:00:00-06:00</published>
<updated>2016-03-30T00:00:00-06:00</updated>
<id>http://localhost:3000/swap-screenshot-shortcut</id>
<content type="html" xml:base="http://localhost:3000/swap-screenshot-shortcut/">&lt;h2 id=&quot;swap-screenshot-shortcuts&quot;&gt;Swap screenshot shortcuts&lt;/h2&gt;

&lt;p&gt;We all enjoy using OSX’s built-in &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;4&lt;/code&gt; to screenshot. However, it’s quite inconvenient to drag and drop the screenshot from desktop every time. Most people don’t know that &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;4&lt;/code&gt; is screenshot directly to the clipboard, the next step is just &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt; to any application you like. I found this extremely useful especially when I want to send a screenshot.&lt;/p&gt;

&lt;p&gt;Using only left hand to reach 4 keys one time is hard. So I swapped both as in the image below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;{{ site.url  }}/assets/images/screenshot-swap.jpg&quot; alt=&quot;swapping screenshot shortcuts&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now, sending a screenshot is easy than ever. &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;4&lt;/code&gt; &amp;gt; switch to your chat client &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt;. Done.&lt;/p&gt;
</content>
<category term="Apple" />
<category term="Shortcuts" />
<category term="Tips" />
<summary>Swap screenshot shortcuts</summary>
</entry>
<entry>
<title>Why I use Vim</title>
<link href="http://localhost:3000/why-I-use-vim/" rel="alternate" type="text/html" title="Why I use Vim" />
<published>2016-03-28T00:00:00-06:00</published>
<updated>2016-03-28T00:00:00-06:00</updated>
<id>http://localhost:3000/why-I-use-vim</id>
<content type="html" xml:base="http://localhost:3000/why-I-use-vim/">&lt;h2 id=&quot;why-i-use-vim&quot;&gt;Why I use Vim&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;We spend so much of our time trying to fit in. One day, it will occur to us life is much more rewarding when choosing the road not taken, a life not patterned after someone else’s, an editor, very few will ever use.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I like Vim, Tmux and Zsh. It rewards me a lot when I know this is an IDE that only suits me. With motivation like this, I spend a lot of time to config, maintain and perfect my dotfiles. At same time, I found knowing Vim makes coding absolutely productive and amazingly enjoyable. The idea of using Vim with model editing is being &lt;em&gt;lazy&lt;/em&gt;, building a mouse-free work-flow, keeping possibilities under fingertips. I don’t buy the shit when people say that they don’t need it because coding is 90% thinking and 10% writing. I spend 90% of my time fix code rather than writing code. When I want to reach the specific part of a file, I want it to happen as quick as possible. To me, Vim is a state of the art, quickly navigating through lines of code, creatively combining shortcuts, endlessly learning mind blowing tricks, all of these make Vim irresistible.&lt;/p&gt;

&lt;p&gt;Vim has massive shortcuts, there is always a better way of doing the same thing with fewer keystrokes. The intention is clear: keep learning, don’t be contented, find the fastest and most convenient way to make a change. Additionally, Vim brings me creative thinking. I wanted to apply the idea of using &lt;code class=&quot;highlighter-rouge&quot;&gt;hjkl&lt;/code&gt; as &lt;code class=&quot;highlighter-rouge&quot;&gt;arrow&lt;/code&gt; keys in any applications, I found an approach and practised it. It worked out much better than I expected. Soon, I got addicted. So, I wrote both &lt;a href=&quot;{{ site.url }}/osx-shortcuts-you-may-not-know/&quot;&gt;OSX-shortcuts-you-may-not-know&lt;/a&gt; and &lt;a href=&quot;{{ site.url }}/advanced-keymapping/&quot;&gt;advanced-keymapping&lt;/a&gt;, hopefully spreading a little to have others adopt the concept.&lt;/p&gt;

&lt;p&gt;After all, Vim may not necessarily make me a good developer, but definitely makes me a motivated developer.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yifanchen/dotfiles&quot;&gt;my dotfiles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;{{ site.url }}/assets/images/vim.jpg&quot; alt=&quot;my Vim&quot; /&gt;&lt;/p&gt;

</content>
<category term="Vim" />
<category term="tmux" />
<category term="zsh" />
<summary>Why I use Vim</summary>
</entry>
<entry>
<title>陆续总结一下github上好的前端教程</title>
<link href="http://localhost:3000/github-chinese/" rel="alternate" type="text/html" title="陆续总结一下github上好的前端教程" />
<published>2016-03-27T22:44:00-06:00</published>
<updated>2016-03-27T22:44:00-06:00</updated>
<id>http://localhost:3000/github-chinese</id>
<content type="html" xml:base="http://localhost:3000/github-chinese/">&lt;h2 id=&quot;github&quot;&gt;陆续总结一下github上好的前端教程&lt;/h2&gt;

&lt;p&gt;自己是做前端的，就是front end。一直觉得前端相对来说比较容易学。随着各种框架的出现和语言一点一点的完善，如果用心的话，
半年可以达到一个很不错的水平。在美国找到一个5万－6万的工作，也绝对不难。我们公司有300+的程序员，前端大概占了5/1，
而其中不少都是从code camp过来的，也就是说经验少于半年。所以，如果你目前没有工作，或者不喜欢自己的工作，而且又对电脑比较
感兴趣的话，前端是个非常棒的选择。&lt;/p&gt;

&lt;p&gt;每天都会去github逛逛，找找新鲜的东西看。无意间发现上面有很多非常棒的中文教程，书籍。这绝对是一个很好的现象。今后的几天我会陆续贴
一些好的中文教程，对那些想学前端的的朋友来说，能少走点弯路就少走点。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/AutumnsWind/Front-end-tutorial&quot; target=&quot;_blank&quot;&gt;front end totuorial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这绝对是个神贴，里面归结了非常多，非常棒的学习材料。有必须要读的，也有在闲暇时间没事看两眼的。总之，你如果想学习front end，这个必须有。
强烈建议把所有东西都过一遍，惭愧啊，我很多东西都还没读。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jsfront/src&quot; target=&quot;_blank&quot;&gt;jsfront&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;jsfront有自己的网络群，当然上面也有很多javascript常用函数和常见模式。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jsfront/front-end-collect&quot; target=&quot;_blank&quot;&gt;front end collect&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;front end collect和front end toturial很像，但是内容方面来讲，后者更强。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sunyuhui/JavaScript-Tips&quot; target=&quot;_blank&quot;&gt;javascript tips&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;javasctip tips是个很棒的想法，每天更新个小tip，每天一步，慢慢学习，但是目前maintainer好像不再maintain了。希望有一天能被人重新拾起。&lt;/p&gt;

</content>
<category term="github" />
<category term="中文" />
<category term="教程" />
<summary>陆续总结一下github上好的前端教程</summary>
</entry>
<entry>
<title>Advanced Keymapping</title>
<link href="http://localhost:3000/advanced-keymapping/" rel="alternate" type="text/html" title="Advanced Keymapping" />
<published>2016-03-20T22:44:00-06:00</published>
<updated>2016-03-20T22:44:00-06:00</updated>
<id>http://localhost:3000/advanced-keymapping</id>
<content type="html" xml:base="http://localhost:3000/advanced-keymapping/">&lt;h2 id=&quot;advanced-keymapping&quot;&gt;Advanced Keymapping&lt;/h2&gt;

&lt;p&gt;In order to get the most of this post, please read &lt;a href=&quot;{{ site.url }}/osx-shortcuts-you-may-not-know/&quot;&gt;OSX-shortcuts-you-might-not-know&lt;/a&gt; first.&lt;/p&gt;

&lt;p&gt;I am going to talk about how and why I map &lt;code class=&quot;highlighter-rouge&quot;&gt;hjkl&lt;/code&gt; as &lt;code class=&quot;highlighter-rouge&quot;&gt;arrow&lt;/code&gt; keys. For the mapping to work, you will need to use either of the following tools.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pqrs.org/osx/karabiner/&quot;&gt;Karabiner&lt;/a&gt;: The most powerful key mapping tool. Capable of doing all sorts of crazy key mappings. Preferences come in options,
simply checking option makes configuration even easier. Still unsatisfied? Then make your own &lt;code class=&quot;highlighter-rouge&quot;&gt;private.xml&lt;/code&gt; and import in. Yes, it is just this amazing. On top of that, 
it comes with a great customer service.(I got response within 8 hours when I sent emails, not to mention the maintainer is in Japan) Most importantly, it is free.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.boastr.net/&quot;&gt;BetterTouchTool&lt;/a&gt;: BTT is well known, almost everyone likes the Snap feature, settings are very intuitive. It is no longer free, however spending few bucks to have it 24/7.
I am totally down. In this post, I am not going to show how BTT works, it’s very easy to figure out.&lt;/p&gt;

&lt;p&gt;Between these two tools, I would go with Karabiner over BTT for two reasons:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Unlike &lt;code class=&quot;highlighter-rouge&quot;&gt;arrow&lt;/code&gt; keys, &lt;code class=&quot;highlighter-rouge&quot;&gt;letter&lt;/code&gt; keys don’t repeat themselves when holding down in OSX(Windows does),
which could be annoying. Luckily, Karabiner fixes this problem.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Free.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;about-hjkl&quot;&gt;About HJKL&lt;/h3&gt;

&lt;p&gt;I started to use Vim last year. I absolutely like model editing and the idea of mouse-less. &lt;code class=&quot;highlighter-rouge&quot;&gt;hjkl&lt;/code&gt; is one of the most beautiful inventions in Vim. 
I wanted to apply the idea to the entire system. It turned out better than I thought. Now I use it for everything, checking out emails in Mail, browsing files in Finder,
going through lists in Slack, etc.&lt;/p&gt;

&lt;p&gt;The screen shot is my setting. You are welcome to play with it, map any way you like. I am going to use my mapping as an example.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;{{ site.url }}/assets/images/karabiner-setting.jpg&quot; alt=&quot;Karabiner key mapping&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After you map it the way like I do, the beautiful part happens:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;h&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;k&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;left&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;down&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;up&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;right&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;h&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;: navigating through beginning and end of a line.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;h&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;: select entire line.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;k&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt;: top or bottom of the file&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;k&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt;: select entire file from either top or bottom.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;k&lt;/code&gt;: going through intellisense in IDE or up and down when search in Google.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;: very useful to attach parameters to the end of a url.&lt;/p&gt;

&lt;h5 id=&quot;example-of-adding-a-parameter-to-an-url-with-both-hands-on-row-2-of-keyboard&quot;&gt;Example of adding a parameter to an url with both hands on row 2 of keyboard&lt;/h5&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;type the parameter.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, you can navigate through lines of code without moving right hand to &lt;code class=&quot;highlighter-rouge&quot;&gt;arrow&lt;/code&gt; keys.&lt;/p&gt;

&lt;h5 id=&quot;what-if-i-already-mapped-control--hjkl-in-vim&quot;&gt;What if I already mapped &lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;hjkl&lt;/code&gt; in Vim?&lt;/h5&gt;

&lt;ol&gt;
  &lt;li&gt;I suggest to disable Karabiner when iTerm is running. Why? Because Vim comes with powerful shortcuts, we should learn them.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fn&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;hjkl&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;map-caps-lock-to-control-smartly&quot;&gt;Map &lt;code class=&quot;highlighter-rouge&quot;&gt;caps lock&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; smartly&lt;/h5&gt;

&lt;p&gt;Instead of mapping &lt;code class=&quot;highlighter-rouge&quot;&gt;caps lock&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; permanently, why don’t just map it only when &lt;code class=&quot;highlighter-rouge&quot;&gt;caps lock&lt;/code&gt; is holding down with other keys?
Use &lt;a href=&quot;https://pqrs.org/osx/karabiner/seil.html.en&quot;&gt;Seil&lt;/a&gt; to do it.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;This post is meant to share my key mappings, shortcuts and how I benefit from them, I am sure there are far more than I know.
With good software, be creative with your own mappings.&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;中文&lt;/h1&gt;

&lt;p&gt;可能是原来玩魔兽的原因，一直喜欢玩快捷键，能用快捷键的地方尽量不用鼠标点击。现在所有工作用一个MacBook Pro来完成，不需要任何外接显示器。熟知快捷键工作效率高，同时乐趣也多。
玩vim有感，觉得&lt;code class=&quot;highlighter-rouge&quot;&gt;hjkl&lt;/code&gt;做为方向键再合适不过了。编辑的时候，光标可以左右移动，无论是拷贝复制，还是整段的代码选择，都会方便非常多。试过之后，是如此好用。
这里简单介绍两个快捷键编辑器：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pqrs.org/osx/karabiner/&quot;&gt;Karabiner&lt;/a&gt;: 是可以找到的最强大的编辑器，没有之一。功能多的让人头痛。最厉害的是什么都帮你想好了，只需要选择喜欢的选项就可以。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.boastr.net/&quot;&gt;BetterTouchTool&lt;/a&gt;: BTT 也是个非常出色的软件，简单易用。&lt;/p&gt;

&lt;p&gt;如果你也喜欢快捷键，并且是按我的设置来的话（如图），下面这些快捷键组合会让你幸福感暴增。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;h&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;k&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;: 左，下，上，右。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;h&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;: 到整行的开始或者末尾。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;h&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;: 选择整行。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;k&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt;: 文件的最开始和结尾。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;k&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt;: 选择所有文件内容。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;k&lt;/code&gt;: 这个在百度搜索东西的时候上下选择很有用。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;: 这个在网址地址太长不想打而又需要在末尾加参数的时候用最合适不过了。&lt;/p&gt;

&lt;h5 id=&quot;section-1&quot;&gt;实例演示，如何快速地在网址末尾加参数&lt;/h5&gt;

&lt;ol&gt;
  &lt;li&gt;打开浏览器&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;打入地址，如果地址很长，会自动选择。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;打入参数&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;整个过程手不需要离开键盘的黄金位置。&lt;/p&gt;

&lt;h5 id=&quot;vimcontrol--hjkl-&quot;&gt;如果在Vim里面我已经设置了&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;hjkl&lt;/code&gt; 怎么办？&lt;/h5&gt;

&lt;ol&gt;
  &lt;li&gt;我建议disable karabiner用Vim的时候，为什么？很简单，Vim的快捷键很强大，必须去发觉。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fn&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;hjkl&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;section-2&quot;&gt;总结&lt;/h3&gt;

&lt;p&gt;最后，这个post的目的是分享快捷键的小技巧，当然你可以按自己的方式来。&lt;/p&gt;
</content>
<category term="keymapping" />
<category term="karabiner" />
<category term="shotcuts" />
<summary>Advanced Keymapping</summary>
</entry>
<entry>
<title>OSX Shortcuts You Might Not know</title>
<link href="http://localhost:3000/osx-shortcuts-you-may-not-know/" rel="alternate" type="text/html" title="OSX Shortcuts You Might Not know" />
<published>2016-03-15T00:00:00-06:00</published>
<updated>2016-03-15T00:00:00-06:00</updated>
<id>http://localhost:3000/osx-shortcuts-you-may-not-know</id>
<content type="html" xml:base="http://localhost:3000/osx-shortcuts-you-may-not-know/">&lt;h2 id=&quot;osx-shortcuts-you-might-not-know&quot;&gt;OSX Shortcuts You Might Not Know&lt;/h2&gt;

&lt;p&gt;As developers live on keyboards 24/7, we should be aware of any kinds of shortcuts that will benefit productivities.&lt;/p&gt;

&lt;p&gt;Between Win and OSX, I arguably think OSX has better combination of shortcuts, with powerful key mapping tools, it is better than ever.&lt;/p&gt;

&lt;p&gt;Read &lt;a href=&quot;http://www.cyfyifanchen.com/advanced-keymapping/&quot;&gt;advanced-keymapping&lt;/a&gt;, and take keymapping to the next level.&lt;/p&gt;

&lt;h4 id=&quot;editing&quot;&gt;Editing&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;left&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;right&lt;/code&gt;: navigating through beginning and end of a line.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;left&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;right&lt;/code&gt;: select entire line.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;top&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;bottom&lt;/code&gt;: top or bottom of the file&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;top&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;bottom&lt;/code&gt;: select entire file from either top or bottom.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;del&lt;/code&gt;: delete content behind cursor on the same line.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;left&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;right&lt;/code&gt;: navigating through word by word.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;left&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;right&lt;/code&gt;: select word.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;del&lt;/code&gt;: delete entire word, no long need to copy from other places.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;8&lt;/code&gt;: bullet.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;k&lt;/code&gt;: &lt;/p&gt;

&lt;h4 id=&quot;system&quot;&gt;System&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;power&lt;/code&gt;: shorter to sleep, longer to shut down.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt;: cycle through different windows in current application.(one of my favorite shortcuts, doesn’t exist in Windows)&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt;: open preference of any application.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;: select address bar in any browser.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;w&lt;/code&gt;: close application tab.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;w&lt;/code&gt;: close all tabs, but application is still running.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;q&lt;/code&gt;: completely quit application.&lt;/p&gt;

&lt;h4 id=&quot;chrome&quot;&gt;Chrome&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;tab&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;tab&lt;/code&gt;: navigating through tabs.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt;: toggle bookmark bar.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;c&lt;/code&gt;: inspect element ready.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt;: open developer tool without inspect element ready.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt;: open console window.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;u&lt;/code&gt;: open source.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt;: toggle dock side.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt;: toggle device view&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;k&lt;/code&gt;: clear console.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;F2&lt;/code&gt;: Edit as HTML in Chrome developer tool.&lt;/p&gt;

&lt;h4 id=&quot;finder&quot;&gt;Finder&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;: downloads.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;h&lt;/code&gt;: home.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shirt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;o&lt;/code&gt;: documents.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shirt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt;: desktop.&lt;/p&gt;

&lt;h4 id=&quot;terminal&quot;&gt;Terminal&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;w&lt;/code&gt;: delete single word.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;u&lt;/code&gt;: delete entire line.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;: go to beginning of the line.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;e&lt;/code&gt;: go to end of the line.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;h&lt;/code&gt;: delete, same as &lt;code class=&quot;highlighter-rouge&quot;&gt;delete&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt;: previous command.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;: clear.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;: go to previous directory.(very useful)&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;中文&lt;/h1&gt;

&lt;p&gt;以前玩魔兽，喜欢快捷键，简单总结一下自己觉得很有用的快捷键。&lt;/p&gt;

&lt;h4 id=&quot;section-1&quot;&gt;编辑&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;left&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;right&lt;/code&gt;: 到一行的开始或结尾。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;left&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;right&lt;/code&gt;: 选择整个段落。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;top&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;bottom&lt;/code&gt;: 去到文件的开始或者结尾。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;top&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;bottom&lt;/code&gt;: 选择文件内的全部内容。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;del&lt;/code&gt;: 直接删除一行字。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;left&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;right&lt;/code&gt;: 光标移动词前词后。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;left&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;right&lt;/code&gt;: 选择一个词。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;del&lt;/code&gt;: 直接删除一个词。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;8&lt;/code&gt;: •, 小黑点，知道这个命令之后再也不用去别的地方拷贝了。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;k&lt;/code&gt;: , 是个苹果，无意间发现的，蛮有意思的。&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;系统&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;power&lt;/code&gt;: 睡眠，锁屏，或者关机。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt;: 如果一个软件有多个窗口的话，用这个命令切换不同的窗口。（我个人最喜欢的一个命令，windows没有）。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt;: 打开偏好设置。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;: 直接选取地址栏。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;w&lt;/code&gt;: 关闭软件正在用的tab。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shirt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;w&lt;/code&gt;: 关闭所有的tab，但是软件还在继续运营。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;q&lt;/code&gt;: 关闭软件。&lt;/p&gt;

&lt;h4 id=&quot;chrome-&quot;&gt;Chrome 浏览器&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;tab&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;tab&lt;/code&gt;: 前后切换tab。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;c&lt;/code&gt;: 直接打开 developer tool, 并且 inspect element。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt;: 直接打开 developer tool。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;k&lt;/code&gt;: 清除console端口。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt;: 打开device窗口。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;F2&lt;/code&gt;: 编辑 HTML 在 developer tool 打开的情况下。&lt;/p&gt;

&lt;h4 id=&quot;finder-1&quot;&gt;Finder&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;: 下载。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;h&lt;/code&gt;: 自己的home。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shirt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;o&lt;/code&gt;: 文件。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;shirt&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt;: 桌面。&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;终端&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;w&lt;/code&gt;: 删除整个词。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;u&lt;/code&gt;: 删除整行。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;: 到一行的开始。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;e&lt;/code&gt;: 到一行的结束。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt;: 上一个命令。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;control&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt;: 清除窗口.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;: 上一个目录。（这个很有用）&lt;/p&gt;
</content>
<category term="shortcuts" />
<category term="keymapping" />
<category term="OSX" />
<summary>OSX Shortcuts You Might Not Know</summary>
</entry>
</feed>
